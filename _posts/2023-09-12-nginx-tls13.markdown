---
layout: post
title:  "Nginx TLSv1.3"
date:   2023-09-12 11:00:00 +0200
categories: doh
---

Easy, or so I thought. User complained his RHEL9 was warning our nginx does not offer TLSv1.3. Quick check showed this to be true. Longer check revealed that both nginx and openssl on this RHEL7 VM were already updated. So, it should work. Quickly add the `ssl_protocols ... TLSv1.3` and have breakfast. Nope, does not work. Two hours and every conceivable permutation of clients and versions and nginx conf entries later, still no game. Let's have lunch for F's sake. More googling, everything is according to docs. More coffee, a walk around the compound, yell at random people.

Alright, actually I found a hint on one of the first 100 Google results. But I did not take that seriously because it was on AskUbuntu which I usually only read for its entertainment value. However, the noobs there scored a lucky hit by claiming TLSv1.3 has to be set on the global default_server. Which is nonsense... but... it does seem to work.

By dinner time, it became clear

> the TLSv1.3 setting has to be added to every `server{}` listening on the *same IP*.

Update: Collegue informed me that with his nginx it was sufficient to set it in just one conf. He speculated about having done it to the *right* one by chance. This makes me think that maybe load order might be important. Like it works when 1.3 is enabled on the first server that listens on an ip. Which does not make the above invalid as it covers that case, too. It is, however, irritating without end that we have to guess at this as the docu is not explaining this unexpected behaviour.

Anyway, more cleanly, create a dedicated ssl conf and include that to every server conf, at least those with same listen values. If one server has 1.3 setting and the other does not, then both don't provide it. Works now. No thanks to whoever wrote the nginx docu. I might reconsider my habitual Ubuntu bashing. Well, nah, just kiddin.


